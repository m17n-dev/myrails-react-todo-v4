version: "3.7"
services:
  db:
    image: mysql/mysql-server:5.7
    command: ["--bind-address=0.0.0.0"]
    environment:
      MYSQL_ROOT_PASSWORD: password
    networks:
      - default
    ports:
      - "3306:3306"
    volumes:
      - ./backend/initdb.d:/docker-entrypoint-initdb.d
      - db_data:/var/lib/mysql

  rails-api-v4-dev:
    build:
      context: ./backend/
      dockerfile: Dockerfile-dev
    image: rails-api-v4-dev:1.0
    environment:
      MYSQL_USERNAME: app
      MYSQL_PASSWORD: password
      MYSQL_HOST: db
    networks:
      - default
    ports:
      - "3000:3000"
    depends_on:
      - db
    volumes:
      - ./backend:/app
      - rails-api-v4-bundle:/app/vendor/bundle
      - rails-api-v4-node_modules:/app/node_modules

  rails-api-v4:
    build:
      context: ./backend/
      dockerfile: Dockerfile-buildkit
    image: rails-api-v4:1.0
    environment:
      MYSQL_USERNAME: app
      MYSQL_PASSWORD: password
      MYSQL_HOST: db
    ports:
      - "3000:3000"
    depends_on:
      - db
    stdin_open: true
    tty: true
    volumes:
      - ./backend:/app
      - rails-api-v4-bundle:/app/vendor/bundle
      - rails-api-v4-node_modules:/app/node_modules

  front-react-v4-dev:
    build:
      context: ./frontend/
      dockerfile: Dockerfile-dev
    image: front-react-v4-dev:1.0
    networks:
      - default
    ports:
      - "3001:3000"
    volumes:
      - ./frontend:/usr/src/app
      - front-react-v4-node_modules:/usr/src/app/node_modules
      - front-react-v4-public:/usr/src/app/public

  front-react-v4:
    build:
      context: ./frontend/
      dockerfile: Dockerfile-prod
    image: front-react-v4:1.0
    depends_on:
      - rails-api-v4
    ports:
      - "80:80"

volumes:
  db_data:
    driver: local
  rails-api-v4-bundle:
    driver: local
  rails-api-v4-node_modules:
    driver: local
  front-react-v4-node_modules:
    driver: local
  front-react-v4-public:
    driver: local
